{"ast":null,"code":"import _classCallCheck from \"/root/JPMC-tech-task-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/JPMC-tech-task-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var DataManipulator =\n/*#__PURE__*/\nfunction () {\n  function DataManipulator() {\n    _classCallCheck(this, DataManipulator);\n  }\n\n  _createClass(DataManipulator, null, [{\n    key: \"generateRow\",\n    value: function generateRow(serverRespond) {\n      var priceABC = (serverRespond[0].top_ask_price + serverRespond[0].top_bid_price) / 2;\n      var priceDEF = (serverRespond[1].top_ask_price + serverRespond[1].top_bid_price) / 2;\n      var ratio = priceABC / priceDEF;\n      var upperBound = 1 + 0.05;\n      var lowerBound = 1 - 0.05;\n      return serverResponds.map(function (el) {\n        return {\n          price_abc: priceABC,\n          price_def: priceDEF,\n          ratio: ratio,\n          timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ? serverRespond[0].timestamp : serverRespond[1].timestamp,\n          upper_bound: upperBound,\n          lower_bound: lowerBound,\n          trigger_alert: ratio > upperBound || ratio < lowerBound ? ratio : undefined\n        };\n      });\n    }\n  }]);\n\n  return DataManipulator;\n}();","map":{"version":3,"sources":["/root/JPMC-tech-task-3/src/DataManipulator.ts"],"names":["DataManipulator","serverRespond","priceABC","top_ask_price","top_bid_price","priceDEF","ratio","upperBound","lowerBound","serverResponds","map","el","price_abc","price_def","timestamp","upper_bound","lower_bound","trigger_alert","undefined"],"mappings":";;AAeA,WAAaA,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gCAEqBC,aAFrB,EAE4D;AACxD,UAAMC,QAAQ,GAAC,CAACD,aAAa,CAAC,CAAD,CAAb,CAAiBE,aAAjB,GAA+BF,aAAa,CAAC,CAAD,CAAb,CAAiBG,aAAjD,IAAgE,CAA/E;AACA,UAAMC,QAAQ,GAAC,CAACJ,aAAa,CAAC,CAAD,CAAb,CAAiBE,aAAjB,GAA+BF,aAAa,CAAC,CAAD,CAAb,CAAiBG,aAAjD,IAAgE,CAA/E;AACA,UAAME,KAAK,GAACJ,QAAQ,GAACG,QAArB;AACA,UAAME,UAAU,GAAC,IAAE,IAAnB;AACA,UAAMC,UAAU,GAAC,IAAE,IAAnB;AACA,aAAOC,cAAc,CAACC,GAAf,CAAmB,UAACC,EAAD,EAAa;AACrC,eAAO;AACLC,UAAAA,SAAS,EAACV,QADL;AAELW,UAAAA,SAAS,EAACR,QAFL;AAGLC,UAAAA,KAAK,EAALA,KAHK;AAILQ,UAAAA,SAAS,EAAEb,aAAa,CAAC,CAAD,CAAb,CAAiBa,SAAjB,GAA2Bb,aAAa,CAAC,CAAD,CAAb,CAAiBa,SAA5C,GACXb,aAAa,CAAC,CAAD,CAAb,CAAiBa,SADN,GACgBb,aAAa,CAAC,CAAD,CAAb,CAAiBa,SALvC;AAMLC,UAAAA,WAAW,EAACR,UANP;AAOLS,UAAAA,WAAW,EAACR,UAPP;AAQLS,UAAAA,aAAa,EAAEX,KAAK,GAACC,UAAN,IAAoBD,KAAK,GAACE,UAA3B,GAAuCF,KAAvC,GAA6CY;AARtD,SAAP;AAUD,OAXM,CAAP;AAYD;AApBH;;AAAA;AAAA","sourcesContent":["import { ServerRespond } from './DataStreamer';\n\nexport interface Row {\n  //stock: string,\n  //top_ask_price: number,\n  price_abc:number,\n  price_def:number,\n  ratio:number,\n  timestamp: Date,\n  upper_bound:number,\n  lower_bound:number,\n  trigger_alert:number | undefined,\n}\n\n\nexport class DataManipulator {\n\n  static generateRow(serverRespond: ServerRespond[]): Row[] {\n    const priceABC=(serverRespond[0].top_ask_price+serverRespond[0].top_bid_price)/2;\n    const priceDEF=(serverRespond[1].top_ask_price+serverRespond[1].top_bid_price)/2;\n    const ratio=priceABC/priceDEF;\n    const upperBound=1+0.05;\n    const lowerBound=1-0.05;\n    return serverResponds.map((el: any) => {\n      return {\n        price_abc:priceABC,\n        price_def:priceDEF,\n        ratio,\n        timestamp: serverRespond[0].timestamp>serverRespond[1].timestamp?\n        serverRespond[0].timestamp:serverRespond[1].timestamp,\n        upper_bound:upperBound,\n        lower_bound:lowerBound,\n        trigger_alert:(ratio>upperBound || ratio<lowerBound)?ratio:undefined,\n      };\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}